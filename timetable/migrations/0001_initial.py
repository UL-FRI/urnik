# -*- coding: utf-8 -*-
# Generated by Django 1.11.10 on 2018-02-28 11:15
from __future__ import unicode_literals

import datetime

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Activity",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("shortName", models.CharField(max_length=32)),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("LAB", "Laborant vaje"),
                            ("LV", "Laboratorijske vaje"),
                            ("AV", "Avditorne vaje"),
                            ("P", "Predavanja"),
                            ("TUT", "Tutorstvo"),
                            ("REP", "Repetitorij"),
                        ],
                        max_length=4,
                    ),
                ),
                ("duration", models.IntegerField()),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="ActivityRealization",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("intended_size", models.IntegerField(blank=True, default=0)),
                (
                    "activity",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="realizations",
                        to="timetable.Activity",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ActivitySet",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created", models.DateTimeField(default=datetime.datetime.now)),
                ("slug", models.SlugField()),
                ("name", models.CharField(max_length=64)),
                ("locked", models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name="Allocation",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "day",
                    models.CharField(
                        choices=[
                            ("MON", "ponedeljek"),
                            ("TUE", "torek"),
                            ("WED", "sreda"),
                            ("THU", "ƒçetrtek"),
                            ("FRI", "petek"),
                        ],
                        max_length=3,
                    ),
                ),
                (
                    "start",
                    models.CharField(
                        choices=[
                            ("07:00", "07:00"),
                            ("08:00", "08:00"),
                            ("09:00", "09:00"),
                            ("10:00", "10:00"),
                            ("11:00", "11:00"),
                            ("12:00", "12:00"),
                            ("13:00", "13:00"),
                            ("14:00", "14:00"),
                            ("15:00", "15:00"),
                            ("16:00", "16:00"),
                            ("17:00", "17:00"),
                            ("18:00", "18:00"),
                            ("19:00", "19:00"),
                            ("20:00", "20:00"),
                            ("21:00", "21:00"),
                        ],
                        max_length=5,
                    ),
                ),
                (
                    "activityRealization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="allocations",
                        to="timetable.ActivityRealization",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Classroom",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50)),
                ("shortName", models.CharField(max_length=32)),
                ("capacity", models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name="ClassroomNResources",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("n", models.IntegerField()),
                (
                    "classroom",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="n_resources",
                        to="timetable.Classroom",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ClassroomSet",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created", models.DateField()),
                ("slug", models.SlugField()),
                ("name", models.CharField(max_length=64)),
                ("locked", models.BooleanField(default=False)),
                (
                    "classrooms",
                    models.ManyToManyField(
                        blank=True,
                        related_name="classroomset",
                        to="timetable.Classroom",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Group",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("shortName", models.CharField(max_length=64)),
                ("size", models.IntegerField(null=True)),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="GroupSet",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created", models.DateTimeField()),
                ("slug", models.SlugField()),
                ("name", models.CharField(max_length=64)),
                ("locked", models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name="Heuristic",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name="Location",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name="LocationDistance",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("distance", models.IntegerField()),
                ("time", models.IntegerField()),
                (
                    "from_location",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="from_location",
                        to="timetable.Location",
                    ),
                ),
                (
                    "to_location",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="to_location",
                        to="timetable.Location",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="NRequirementsPerStudent",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("n", models.FloatField()),
                (
                    "activity",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="timetable.Activity",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Preference",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "level",
                    models.CharField(
                        choices=[
                            ("WANT", "Want"),
                            ("HATE", "Hate"),
                            ("CANT", "Unable"),
                        ],
                        max_length=4,
                    ),
                ),
                ("weight", models.FloatField(default=1.0)),
            ],
        ),
        migrations.CreateModel(
            name="PreferenceSet",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created", models.DateTimeField(default=datetime.datetime.now)),
                ("slug", models.SlugField()),
                ("name", models.CharField(max_length=64)),
                ("locked", models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name="Resource",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name="Tag",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=32)),
                ("description", models.TextField()),
                (
                    "activities",
                    models.ManyToManyField(
                        blank=True, related_name="tags", to="timetable.Activity"
                    ),
                ),
                (
                    "activity_realizations",
                    models.ManyToManyField(
                        blank=True,
                        related_name="tags",
                        to="timetable.ActivityRealization",
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True, related_name="tags", to="timetable.Group"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Teacher",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("code", models.CharField(default="", max_length=32, unique=True)),
                (
                    "user",
                    models.OneToOneField(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="teacher",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Timetable",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=64)),
                ("slug", models.SlugField()),
                ("public", models.BooleanField(default=False)),
                ("start", models.DateField(default=datetime.date.today)),
                ("end", models.DateField(default=datetime.date.today)),
                ("preference_deadline", models.DateField(default=datetime.date.today)),
                (
                    "activityset",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="timetable.ActivitySet",
                    ),
                ),
                (
                    "classroomset",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="timetables",
                        to="timetable.ClassroomSet",
                    ),
                ),
                (
                    "groupset",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="timetables",
                        to="timetable.GroupSet",
                    ),
                ),
                (
                    "preferenceset",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="timetable.PreferenceSet",
                    ),
                ),
                (
                    "respects",
                    models.ManyToManyField(
                        blank=True,
                        related_name="respected_by",
                        to="timetable.Timetable",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TimetableSet",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("slug", models.SlugField()),
                ("public", models.BooleanField(default=False)),
                ("name", models.CharField(max_length=64)),
                ("modified", models.DateTimeField(auto_now_add=True)),
                (
                    "timetables",
                    models.ManyToManyField(
                        related_name="timetable_sets", to="timetable.Timetable"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ActivityPreference",
            fields=[
                (
                    "preference_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="timetable.Preference",
                    ),
                ),
            ],
            bases=("timetable.preference",),
        ),
        migrations.CreateModel(
            name="ActivityTimePlacePreference",
            fields=[
                (
                    "preference_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="timetable.Preference",
                    ),
                ),
                (
                    "day",
                    models.CharField(
                        choices=[
                            ("MON", "ponedeljek"),
                            ("TUE", "torek"),
                            ("WED", "sreda"),
                            ("THU", "ƒçetrtek"),
                            ("FRI", "petek"),
                        ],
                        max_length=3,
                    ),
                ),
                (
                    "start",
                    models.CharField(
                        choices=[
                            ("07:00", "07:00"),
                            ("08:00", "08:00"),
                            ("09:00", "09:00"),
                            ("10:00", "10:00"),
                            ("11:00", "11:00"),
                            ("12:00", "12:00"),
                            ("13:00", "13:00"),
                            ("14:00", "14:00"),
                            ("15:00", "15:00"),
                            ("16:00", "16:00"),
                            ("17:00", "17:00"),
                            ("18:00", "18:00"),
                            ("19:00", "19:00"),
                            ("20:00", "20:00"),
                            ("21:00", "21:00"),
                        ],
                        max_length=5,
                    ),
                ),
                ("duration", models.IntegerField()),
            ],
            bases=("timetable.preference",),
        ),
        migrations.CreateModel(
            name="GroupPreference",
            fields=[
                (
                    "preference_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="timetable.Preference",
                    ),
                ),
            ],
            bases=("timetable.preference",),
        ),
        migrations.CreateModel(
            name="TagPreference",
            fields=[
                (
                    "preference_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="timetable.Preference",
                    ),
                ),
            ],
            bases=("timetable.preference",),
        ),
        migrations.CreateModel(
            name="TeacherPreference",
            fields=[
                (
                    "preference_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="timetable.Preference",
                    ),
                ),
            ],
            bases=("timetable.preference",),
        ),
        migrations.AddField(
            model_name="tag",
            name="teachers",
            field=models.ManyToManyField(
                blank=True, related_name="tags", to="timetable.Teacher"
            ),
        ),
        migrations.AddField(
            model_name="preference",
            name="preferenceset",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="preferences",
                to="timetable.PreferenceSet",
            ),
        ),
        migrations.AddField(
            model_name="nrequirementsperstudent",
            name="resource",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="timetable.Resource"
            ),
        ),
        migrations.AddField(
            model_name="location",
            name="distances",
            field=models.ManyToManyField(
                through="timetable.LocationDistance", to="timetable.Location"
            ),
        ),
        migrations.AddField(
            model_name="group",
            name="groupset",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="groups",
                to="timetable.GroupSet",
            ),
        ),
        migrations.AddField(
            model_name="group",
            name="parent",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="+",
                to="timetable.Group",
            ),
        ),
        migrations.AddField(
            model_name="classroomnresources",
            name="resource",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="timetable.Resource"
            ),
        ),
        migrations.AddField(
            model_name="classroom",
            name="location",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="timetable.Location"
            ),
        ),
        migrations.AddField(
            model_name="classroom",
            name="resources",
            field=models.ManyToManyField(
                blank=True,
                related_name="classrooms",
                through="timetable.ClassroomNResources",
                to="timetable.Resource",
            ),
        ),
        migrations.AddField(
            model_name="allocation",
            name="classroom",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="timetable.Classroom",
            ),
        ),
        migrations.AddField(
            model_name="allocation",
            name="timetable",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="own_allocations",
                to="timetable.Timetable",
            ),
        ),
        migrations.AddField(
            model_name="activityrealization",
            name="groups",
            field=models.ManyToManyField(
                blank=True, related_name="realizations", to="timetable.Group"
            ),
        ),
        migrations.AddField(
            model_name="activityrealization",
            name="teachers",
            field=models.ManyToManyField(
                blank=True, related_name="activity_realizations", to="timetable.Teacher"
            ),
        ),
        migrations.AddField(
            model_name="activity",
            name="activityset",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="activities",
                to="timetable.ActivitySet",
            ),
        ),
        migrations.AddField(
            model_name="activity",
            name="before",
            field=models.ManyToManyField(
                blank=True, related_name="after", to="timetable.Activity"
            ),
        ),
        migrations.AddField(
            model_name="activity",
            name="groups",
            field=models.ManyToManyField(
                blank=True, related_name="activities", to="timetable.Group"
            ),
        ),
        migrations.AddField(
            model_name="activity",
            name="locations",
            field=models.ManyToManyField(to="timetable.Location"),
        ),
        migrations.AddField(
            model_name="activity",
            name="mustNotOverlap",
            field=models.ManyToManyField(
                blank=True,
                related_name="_activity_mustNotOverlap_+",
                to="timetable.Activity",
            ),
        ),
        migrations.AddField(
            model_name="activity",
            name="requirements",
            field=models.ManyToManyField(blank=True, to="timetable.Resource"),
        ),
        migrations.AddField(
            model_name="activity",
            name="requirements_per_student",
            field=models.ManyToManyField(
                blank=True,
                related_name="per_student_activities",
                through="timetable.NRequirementsPerStudent",
                to="timetable.Resource",
            ),
        ),
        migrations.AddField(
            model_name="activity",
            name="teachers",
            field=models.ManyToManyField(
                blank=True, related_name="activities", to="timetable.Teacher"
            ),
        ),
        migrations.CreateModel(
            name="GroupTimePreference",
            fields=[
                (
                    "grouppreference_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="timetable.GroupPreference",
                    ),
                ),
                (
                    "day",
                    models.CharField(
                        choices=[
                            ("MON", "ponedeljek"),
                            ("TUE", "torek"),
                            ("WED", "sreda"),
                            ("THU", "ƒçetrtek"),
                            ("FRI", "petek"),
                        ],
                        max_length=3,
                    ),
                ),
                (
                    "start",
                    models.CharField(
                        choices=[
                            ("07:00", "07:00"),
                            ("08:00", "08:00"),
                            ("09:00", "09:00"),
                            ("10:00", "10:00"),
                            ("11:00", "11:00"),
                            ("12:00", "12:00"),
                            ("13:00", "13:00"),
                            ("14:00", "14:00"),
                            ("15:00", "15:00"),
                            ("16:00", "16:00"),
                            ("17:00", "17:00"),
                            ("18:00", "18:00"),
                            ("19:00", "19:00"),
                            ("20:00", "20:00"),
                            ("21:00", "21:00"),
                        ],
                        max_length=5,
                    ),
                ),
                ("duration", models.IntegerField(default=1)),
            ],
            bases=("timetable.grouppreference",),
        ),
        migrations.CreateModel(
            name="GroupValuePreference",
            fields=[
                (
                    "grouppreference_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="timetable.GroupPreference",
                    ),
                ),
                ("value", models.IntegerField()),
                (
                    "name",
                    models.CharField(
                        choices=[
                            ("MAXDAYSWEEK", "Max days per week"),
                            ("MINDAYSWEEK", "Min days per week"),
                            ("MAXHOURSDAY", "Max hours per day"),
                            ("MINHOURSDAY", "Min hours per day"),
                            ("MAXHOURSCONT", "Max hours continuously"),
                            ("MAXGAPSDAY", "Max gaps per day"),
                            ("MAXGAPSWEEK", "Max gaps per week"),
                            ("MAXCHANGESWEEK", "Max building changes per week"),
                            ("MAXCHANGESDAY", "Max building changes per day"),
                            ("MINCHANGEGAP", "Min gap between changes"),
                        ],
                        max_length=24,
                    ),
                ),
            ],
            bases=("timetable.grouppreference",),
        ),
        migrations.CreateModel(
            name="TagDescriptivePreference",
            fields=[
                (
                    "tagpreference_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="timetable.TagPreference",
                    ),
                ),
                (
                    "typename",
                    models.CharField(
                        choices=[
                            ("COMMENT", "A random comment"),
                            ("NOOVERLAP", "Must not overlap"),
                            ("GROUPED", "Activities must be grouped"),
                            ("CONSECUTIVE", "Realizations must be consecutive"),
                            ("ENDSSTUDENTSDAY", "Activity ends student's day"),
                            (
                                "SAMEDAY",
                                "A set of activities/realizations must be on the same day",
                            ),
                        ],
                        default="COMMENT",
                        max_length=16,
                    ),
                ),
                ("value", models.TextField()),
            ],
            bases=("timetable.tagpreference",),
        ),
        migrations.CreateModel(
            name="TagTimePreference",
            fields=[
                (
                    "tagpreference_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="timetable.TagPreference",
                    ),
                ),
                (
                    "day",
                    models.CharField(
                        choices=[
                            ("MON", "ponedeljek"),
                            ("TUE", "torek"),
                            ("WED", "sreda"),
                            ("THU", "ƒçetrtek"),
                            ("FRI", "petek"),
                        ],
                        max_length=3,
                    ),
                ),
                (
                    "start",
                    models.CharField(
                        choices=[
                            ("07:00", "07:00"),
                            ("08:00", "08:00"),
                            ("09:00", "09:00"),
                            ("10:00", "10:00"),
                            ("11:00", "11:00"),
                            ("12:00", "12:00"),
                            ("13:00", "13:00"),
                            ("14:00", "14:00"),
                            ("15:00", "15:00"),
                            ("16:00", "16:00"),
                            ("17:00", "17:00"),
                            ("18:00", "18:00"),
                            ("19:00", "19:00"),
                            ("20:00", "20:00"),
                            ("21:00", "21:00"),
                        ],
                        max_length=5,
                    ),
                ),
                ("duration", models.IntegerField(default=1)),
            ],
            bases=("timetable.tagpreference",),
        ),
        migrations.CreateModel(
            name="TagValuePreference",
            fields=[
                (
                    "tagpreference_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="timetable.TagPreference",
                    ),
                ),
                ("value", models.IntegerField()),
                (
                    "name",
                    models.CharField(
                        choices=[
                            ("MAXDAYSWEEK", "Max days per week for a tag"),
                            ("MINDAYSWEEK", "Min days per week for a tag"),
                            ("MAXHOURSDAY", "Max hours per day for a tag"),
                            ("MINHOURSDAY", "Min hours per day for a tag"),
                            ("MAXGAPSDAY", "Max gaps per day for a tag"),
                            ("MAXGAPSWEEK", "Max gaps per week for a tag"),
                            ("MAXCHANGESWEEK", "Max building changes per week"),
                            ("MAXCHANGESDAY", "Max building changes per day"),
                            ("MINCHANGEGAP", "Min gap between changes"),
                            ("MINACTIVITYGAP", "Min gap between a set of activities"),
                            (
                                "MULSIZE",
                                "Multiply group size for activities with this tag by a factor",
                            ),
                            (
                                "SHRINKGROUPS",
                                "Group size for activity -> Group size - VALUE",
                            ),
                            (
                                "MAXROOMSREALIZATIONS",
                                "Maximal number of different rooms used by the set of realization",
                            ),
                        ],
                        max_length=24,
                    ),
                ),
            ],
            bases=("timetable.tagpreference",),
        ),
        migrations.CreateModel(
            name="TeacherDescriptivePreference",
            fields=[
                (
                    "teacherpreference_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="timetable.TeacherPreference",
                    ),
                ),
                (
                    "typename",
                    models.CharField(
                        choices=[
                            ("COMMENT", "A random comment"),
                            ("NOOVERLAP", "Must not overlap"),
                            ("GROUPED", "Activities must be grouped"),
                            ("CONSECUTIVE", "Realizations must be consecutive"),
                            ("ENDSSTUDENTSDAY", "Activity ends student's day"),
                            (
                                "SAMEDAY",
                                "A set of activities/realizations must be on the same day",
                            ),
                        ],
                        default="COMMENT",
                        max_length=16,
                    ),
                ),
                ("value", models.TextField(blank=True)),
            ],
            bases=("timetable.teacherpreference",),
        ),
        migrations.CreateModel(
            name="TeacherTimePreference",
            fields=[
                (
                    "teacherpreference_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="timetable.TeacherPreference",
                    ),
                ),
                (
                    "day",
                    models.CharField(
                        choices=[
                            ("MON", "ponedeljek"),
                            ("TUE", "torek"),
                            ("WED", "sreda"),
                            ("THU", "ƒçetrtek"),
                            ("FRI", "petek"),
                        ],
                        max_length=3,
                    ),
                ),
                (
                    "start",
                    models.CharField(
                        choices=[
                            ("07:00", "07:00"),
                            ("08:00", "08:00"),
                            ("09:00", "09:00"),
                            ("10:00", "10:00"),
                            ("11:00", "11:00"),
                            ("12:00", "12:00"),
                            ("13:00", "13:00"),
                            ("14:00", "14:00"),
                            ("15:00", "15:00"),
                            ("16:00", "16:00"),
                            ("17:00", "17:00"),
                            ("18:00", "18:00"),
                            ("19:00", "19:00"),
                            ("20:00", "20:00"),
                            ("21:00", "21:00"),
                        ],
                        max_length=5,
                    ),
                ),
                ("duration", models.IntegerField(default=1)),
            ],
            bases=("timetable.teacherpreference",),
        ),
        migrations.CreateModel(
            name="TeacherValuePreference",
            fields=[
                (
                    "teacherpreference_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="timetable.TeacherPreference",
                    ),
                ),
                ("value", models.IntegerField()),
                (
                    "name",
                    models.CharField(
                        choices=[
                            ("MAXDAYSWEEK", "Max days per week"),
                            ("MINDAYSWEEK", "Min days per week"),
                            ("MAXHOURSDAY", "Max hours per day"),
                            ("MINHOURSDAY", "Min hours per day"),
                            ("MAXHOURSCONT", "Max hours continuously"),
                            ("MAXGAPSDAY", "Max gaps per day"),
                            ("MAXGAPSWEEK", "Max gaps per week"),
                            ("MAXCHANGESWEEK", "Max building changes per week"),
                            ("MAXCHANGESDAY", "Max building changes per day"),
                            ("MINCHANGEGAP", "Min gap between changes"),
                        ],
                        max_length=24,
                    ),
                ),
            ],
            bases=("timetable.teacherpreference",),
        ),
        migrations.AddField(
            model_name="teacherpreference",
            name="teacher",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="teacher_preferences",
                to="timetable.Teacher",
            ),
        ),
        migrations.AddField(
            model_name="tagpreference",
            name="tag",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="preferences",
                to="timetable.Tag",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="nrequirementsperstudent",
            unique_together=set([("resource", "activity")]),
        ),
        migrations.AddField(
            model_name="grouppreference",
            name="group",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="group_preferences",
                to="timetable.Group",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="classroomnresources",
            unique_together=set([("resource", "classroom")]),
        ),
        migrations.AddField(
            model_name="activitytimeplacepreference",
            name="activity",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="timetable.Activity"
            ),
        ),
        migrations.AddField(
            model_name="activitytimeplacepreference",
            name="classroom",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="timetable.Classroom"
            ),
        ),
        migrations.AddField(
            model_name="activitypreference",
            name="activity",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="timetable.Activity"
            ),
        ),
        migrations.AddField(
            model_name="activitypreference",
            name="classroom",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="timetable.Classroom"
            ),
        ),
    ]
